name: Manga Monitor

on:
  schedule:
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç, –Ω–æ —Ç–æ–ª—å–∫–æ 50 –º–∞–Ω–≥ –∑–∞ —Ä–∞–∑
    - cron: '*/5 * * * *'
  workflow_dispatch: # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é
  push:
    branches: [ '**' ]
    # –ë–µ–∑ paths: –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ –ª—é–±–æ–π –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –ª—é–±–æ–π –≤–µ—Ç–∫–µ

jobs:
  monitor:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Clean up disk space
      run: |
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
        sudo rm -rf /tmp/*
        sudo rm -rf ~/.cargo/registry/cache/*
        df -h
        
    - name: Build guloader
      run: cargo build --release
    
    - name: Configure Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "github-actions[bot]"
        git config --global --add safe.directory "${{ github.workspace }}"
        git config --local pull.rebase true
        git config --local rebase.autoStash true
    
    - name: Run manga monitoring (5-min, limited load)
      run: |
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        mkdir -p data downloads scans
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if [ ! -f "data/guloader.db" ]; then
          echo "Initializing database..."
          ./target/release/guloader --config config.toml init
        fi
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π
        echo "Starting manga monitoring (5-min, limited to 50 manga)..."
        echo "Processing only 50 manga from config to distribute load..."
        
        # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å –º–∞–Ω–≥ –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏
        ./target/release/guloader --config config.toml monitor --auto-commit --limit 50
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        echo "Monitoring completed. Showing status..."
        ./target/release/guloader --config config.toml status
        
        # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –ù–ï —É–¥–∞–ª—è–µ–º downloads/
        echo "Cleaning up temporary files..."
        find data/ -name "*.db-journal" -delete 2>/dev/null || true
        find scans/ -type f -mtime +1 -delete 2>/dev/null || true
        # –ù–ï —É–¥–∞–ª—è–µ–º downloads/ - –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è!
        df -h
    
    - name: Commit changes
      run: |
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, committing..."
          git add .
          
          # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
          COMMIT_MSG="ü§ñ Auto-update: $(date '+%Y-%m-%d %H:%M:%S UTC')\n\n$(git status --porcelain | head -20)\nRun ID: ${{ github.run_id }}"
          
          git commit -m "$COMMIT_MSG"
          # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ç–∫—É –ø–µ—Ä–µ–¥ –ø—É—à–µ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π
          git pull --rebase origin "${GITHUB_REF_NAME}"
          git push origin "HEAD:${GITHUB_REF_NAME}"
          echo "Changes committed successfully"
        else
          echo "No changes to commit"
        fi
    
    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: error-logs
        path: |
          data/
          *.log