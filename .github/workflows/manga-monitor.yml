name: Manga Monitor

on:
  schedule:
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
    - cron: '*/5 * * * *'
  workflow_dispatch: # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é
  push:
    branches: [ '**' ]
    # –ë–µ–∑ paths: –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ –ª—é–±–æ–π –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –ª—é–±–æ–π –≤–µ—Ç–∫–µ

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Build guloader
      run: cargo build --release
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Run manga monitoring (5-min)
      run: |
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        mkdir -p data downloads scans
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if [ ! -f "data/guloader.db" ]; then
          echo "Initializing database..."
          ./target/release/guloader --config config.toml init
        fi
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        echo "Starting manga monitoring (5-min)..."
        ./target/release/guloader --config config.toml monitor --auto-commit
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        echo "Monitoring completed. Showing status..."
        ./target/release/guloader --config config.toml status
    
    - name: Commit changes
      run: |
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, committing..."
          git add .
          
          # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
          COMMIT_MSG="ü§ñ Auto-update: $(date '+%Y-%m-%d %H:%M:%S UTC')
          
          Changes detected:
          $(git status --porcelain | head -10)
          
          Run ID: ${{ github.run_id }}"
          
          git commit -m "$COMMIT_MSG"
          git push
          echo "Changes committed successfully"
        else
          echo "No changes to commit"
        fi
    
    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: error-logs
        path: |
          data/
          *.log